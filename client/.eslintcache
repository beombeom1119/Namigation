[{"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\thisisthisthis\\client\\src\\index.js":"1","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\thisisthisthis\\client\\src\\App.js":"2","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\thisisthisthis\\client\\src\\reportWebVitals.js":"3","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\thisisthisthis\\client\\src\\components\\Login.js":"4","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\thisisthisthis\\client\\src\\components\\Predict.js":"5","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\thisisthisthis\\client\\src\\components\\Table.js":"6","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\thisisthisthis\\client\\src\\components\\TableBody.js":"7","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\thisisthisthis\\client\\src\\components\\WelcomePage-motion.jsx":"8","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\index.js":"9","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\reportWebVitals.js":"10","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\App.js":"11","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\components\\Login.js":"12","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\components\\WelcomePage-motion.jsx":"13","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\components\\Predict.js":"14","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\components\\Table.js":"15","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\components\\TableBody.js":"16","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\components\\Dictaphone.js":"17"},{"size":500,"mtime":1614075964000,"results":"18","hashOfConfig":"19"},{"size":1801,"mtime":1616639825171,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1614075964000,"results":"21","hashOfConfig":"19"},{"size":2511,"mtime":1616644416795,"results":"22","hashOfConfig":"19"},{"size":3621,"mtime":1616645173637,"results":"23","hashOfConfig":"19"},{"size":2252,"mtime":1614075964000,"results":"24","hashOfConfig":"19"},{"size":599,"mtime":1614075964000,"results":"25","hashOfConfig":"19"},{"size":2094,"mtime":1616645295694,"results":"26","hashOfConfig":"19"},{"size":500,"mtime":1616875556000,"results":"27","hashOfConfig":"28"},{"size":362,"mtime":1616875556000,"results":"29","hashOfConfig":"28"},{"size":1866,"mtime":1617325556362,"results":"30","hashOfConfig":"28"},{"size":3115,"mtime":1617330997660,"results":"31","hashOfConfig":"28"},{"size":2645,"mtime":1617069300669,"results":"32","hashOfConfig":"28"},{"size":3741,"mtime":1617332775245,"results":"33","hashOfConfig":"28"},{"size":2220,"mtime":1617094712133,"results":"34","hashOfConfig":"28"},{"size":599,"mtime":1616875556000,"results":"35","hashOfConfig":"28"},{"size":2105,"mtime":1617325518572,"results":"36","hashOfConfig":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"ibvc4f",{"filePath":"40","messages":"41","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"39"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"39"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"39"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"1bhqh3",{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"59"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"59"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"59"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"59"},"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\thisisthisthis\\client\\src\\index.js",[],["80","81"],"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\thisisthisthis\\client\\src\\App.js",["82","83","84","85","86"],"import React,{Component} from 'react';\nimport './App.css';\n\nimport {withStyles} from '@material-ui/core/styles';\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\nimport Login from './components/Login';\nimport Predict from './components/Predict';\n\n\n\nconst styles = theme => ({\n  root : {\n    width : '100%',\n    marginTop: theme.spacing.unit * 3,\n    overflowX:\"auto\"\n  },\n    table:{\n      minWidth:1080\n    },\n    progress:{\n      margin : theme.spacing.unit*2\n    }\n})\n\n\n\n\n\n\nclass App extends Component{\n\n  constructor(props)     \n  {\n    super(props);\n    this.state={\n      customers:'',\n      completed:0\n    }\n  }\n\n  stateRefresh= () => {           //state 초기화 \n    this.setState(\n      {\n        customers:'',\n        completed:0\n      });\n      this.callApi().then(res=> this.setState({customers:res})) \n      .catch(err=> console.log(err+\"에러\"));\n\n  }\n\n\n  \n  componentDidMount() {\n    this.timer = setInterval(this.progress,20);\n    this.callApi().then(res=> this.setState({customers:res})) \n    .catch(err=> console.log(err));    // 가져온 JSON값을 customers에 저장\n  }\n  \n  callApi = async() =>{\n    const response = await fetch('/api/predict');  //server.js 에 있는 /api/customers JSON값을 가져온다\n    const body = await response.json();\n    return body;\n  }\n\n  // callApi1 = async() =>{\n  //   const response = await fetch('/api/result');  //server.js 에 있는 /api/customers JSON값을 가져온다\n  //   const body = await response.json();\n  //   return body;\n  // }\n\n\n \n\n  progress = () => {\n    const {completed} =this.state;\n    this.setState({ completed: completed>=100? 0 : completed+1});\n  }\n\n  \n  render()\n  \n  {\n    const {classes} =this.props;\n    return(\n      <Login></Login>\n    );\n  }\n}\n\n\nexport default withStyles(styles)(App);\n","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\thisisthisthis\\client\\src\\reportWebVitals.js",[],"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\thisisthisthis\\client\\src\\components\\Login.js",["87","88","89"],"import React, { Component } from 'react'\nimport Predict from './Predict';\nimport '../App.css';\nimport WelcomePage from './WelcomePage-motion.jsx';\n\nexport default class Login extends Component {\n    constructor(props){   // 초기 설정\n        super(props);\n        this.state={\n            userNum:\"\",\n            name:\"\",\n            isLogin:false,\n        }\n    }\n   \n    handleLogin = e =>{\n        e.preventDefault() //페이징 이동 없게\n        const login_info={\n            method:\"POST\",\n            body: JSON.stringify(this.state),\n            headers:{\n                \"Content-Type\":\"application/json\"\n            }\n        };\n\n        fetch(\"/api/login\",login_info).then(res => {\n            return res.json();\n        })\n        .then(json=> {\n            console.log(json[0])\n            console.log(\"checkpoint1\")\n            if(json[0]!= undefined){\n                window.localStorage.setItem(\"userInfo\",JSON.stringify(json))\n                this.setState(\n                    {\n                        userNum : json[0].usernum,\n                        name:json[0].name,\n                        isLogin:true\n                    } );\n                    var confirm_test = window.confirm(this.state.name+\"님이 맞으신가요?\");\n                    console.log(this.state.isLogin)\n            }\n            else {\n                alert(\"아이디 혹은 비밀번호를 확인하세요\");\n            }\n       \n        // if ( confirm_test == true ) {\n        //   e.preventDefault()\n        // }\n         \n    });\n}\n\n    handleuserNum = e =>{\n        this.setState(\n            {\n                userNum: e.target.value\n            \n            }\n        )\n    }\n\n\n\n      \n\n\n\n    \n    render() {\n        return (\n            \n            <div className=\"login-page\">\n                \n                {\n                    this.state.isLogin ===false ?  (  \n                        <div className=\"form\">\n                        <form className=\"login-form\" onSubmit={this.handleLogin}>\n                        <div >유저키 입력!</div>\n                        <input  type=\"password\" value={this.state.userNum} onChange={this.handleuserNum}></input><br></br>\n                        <button  type=\"submit\">로그인</button>\n                        </form>\n                    </div>) : (<div><Predict name={this.state.name} userNum={this.state.userNum} isLogin={this.state.isLogin}></Predict></div>)\n                }\n              \n            </div>\n        )\n    }\n\n    }\n","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\thisisthisthis\\client\\src\\components\\Predict.js",["90"],"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\thisisthisthis\\client\\src\\components\\Table.js",["91"],"import React, { Component } from 'react'\nimport ResultTable from './TableBody'\nimport { get } from 'axios';\nimport '../App.css';\n\nexport default class Table extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            userNum: this.props.userNum,\n            name: this.props.name,\n        }\n    }\n    \n    stateRefresh= () => {           //state 초기화 \n        this.setState(\n          {\n            result:'',\n            completed:0\n            \n          });\n          this.callApi().then(res=> this.setState({result:res})) \n          .catch(err=> console.log(err));\n         \n      }\n\n      componentDidMount() {\n        const login_info={\n            method:\"POST\",\n            body: JSON.stringify(this.state),\n            headers:{\n                \"Content-Type\":\"application/json\"\n            }\n        };\n        fetch(\"/api/login\",login_info).then(res => {\n            return res.json();\n        })\n        this.timer = setInterval(this.progress,20);\n        this.callApi().then(res=> this.setState({result:res})) \n        .catch(err=> console.log(err));    // 가져온 JSON값을 customers에 저장\n      }\n      \n      callApi = async() =>{\n        const response = await fetch('/api/result');  //server.js 에 있는 /api/customers JSON값을 가져온다\n        const body = await response.json();\n        console.log(body)\n        return body;\n        \n      }\n      \n    \n\n    \n        \n\n     \n    \n    render() {\n        return (\n            <div>\n             {this.state.userNum} {this.state.name}\n             <br></br>\n             <br></br><br></br><br></br><br></br><br></br><br></br>\n        <tablehead>\n          <tablecell>번호</tablecell>\n          <tablecell>유저넘버</tablecell>\n          <tablecell>깊이</tablecell>\n          <tablecell>길이</tablecell>\n          <tablecell>날짜</tablecell>\n        </tablehead>\n        <tablebody>\n        {this.state.result ? this.state.result.map(result=> {return (<ResultTable key = {result.id} id = {result.id} userNum = {result.userNum} depth={result.depth} distance={result.distance} date={result.date} >  </ResultTable>)\n        }): (<div>zxczx</div>)\n        \n        } </tablebody>\n\n            </div>\n        )\n    }\n}\n","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\thisisthisthis\\client\\src\\components\\TableBody.js",[],"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\thisisthisthis\\client\\src\\components\\WelcomePage-motion.jsx",["92"],"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\index.js",[],["93","94"],"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\reportWebVitals.js",[],"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\App.js",["95","96"],"import React,{Component} from 'react';\nimport './App.css';\nimport {withStyles} from '@material-ui/core/styles';\nimport Login from './components/Login';\nimport Dictaphone from './components/Dictaphone';\n\nconst styles = theme => ({\n  root : {\n    width : '100%',\n    marginTop: theme.spacing.unit * 3,\n    overflowX:\"auto\"\n  },\n    table:{\n      minWidth:1080\n    },\n    progress:{\n      margin : theme.spacing.unit*2\n    }\n})\n\n\n\n\n\n\nclass App extends Component{\n\n  constructor(props)     \n  {\n    super(props);\n    this.state={\n      customers:'',\n      completed:0\n    }\n  }\n\n  stateRefresh= () => {           //state 초기화 \n    this.setState(\n      {\n        customers:'',\n        completed:0\n      });\n      this.callApi().then(res=> this.setState({customers:res})) \n      .catch(err=> console.log(err+\"에러\"));\n\n  }\n\n\n  \n  componentDidMount() {\n    this.timer = setInterval(this.progress,20);\n    this.callApi().then(res=> this.setState({customers:res})) \n    .catch(err=> console.log(err));    // 가져온 JSON값을 customers에 저장\n  }\n  \n  callApi = async() =>{\n    const response = await fetch('/api/predict');  //server.js 에 있는 /api/customers JSON값을 가져온다\n    const body = await response.json();\n    return body;\n  }\n\n  // callApi1 = async() =>{\n  //   const response = await fetch('/api/result');  //server.js 에 있는 /api/customers JSON값을 가져온다\n  //   const body = await response.json();\n  //   return body;\n  // }\n\n\n \n\n  progress = () => {\n    const {completed} =this.state;\n    this.setState({ completed: completed>=100? 0 : completed+1});\n  }\n\n  \n  render()\n  \n  {\n    const {classes} =this.props;\n    return(\n      <>\n      {/* <Dictaphone/> */}\n      {/* <JavaScript></JavaScript> */}\n      <Login></Login>\n      {/* <Login2></Login2> */}\n     \n      </>\n    );\n  }\n}\n\n\nexport default withStyles(styles)(App);\n","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\components\\Login.js",["97","98","99","100","101"],"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\components\\WelcomePage-motion.jsx",["102","103"],"import React, { useState, useEffect } from 'react'\nimport * as tmImage from '@teachablemachine/image'\n\nexport default function WelcomePage({GetTeachValue}) {\n  const [openVal, setOpenVal] = useState(false);\n  const [state, setstate] = useState({\n    result1 : \"1번\",\n    result2 : \"2번\",\n  })\n\n  const URL = \"https://teachablemachine.withgoogle.com/models/pg97lEWuB/\"\n  let model;\n  let webcam;\n  let labelContainer;\n  let maxPredictions;\n\n  useEffect(() => {\n    init()\n   \n  }, [])\n\n  async function init() {\n    const modelURL = URL + \"model.json\";\n    const metadataURL = URL + \"metadata.json\";\n\n    model = await tmImage.load(modelURL, metadataURL);\n    maxPredictions = model.getTotalClasses();\n\n    const flip = true; \n    webcam = new tmImage.Webcam(200, 200, flip); \n    await webcam.setup();\n    await webcam.play();\n    window.requestAnimationFrame(loop);\n\n    document.getElementById(\"webcam-container\").appendChild(webcam.canvas);\n    labelContainer = document.getElementById(\"label-container\");\n    for (let i = 0; i < maxPredictions; i++) { \n      labelContainer.appendChild(document.createElement(\"div\"));\n    }\n  }\n\n  async function loop() {\n    webcam.update();\n    await predict();\n    window.requestAnimationFrame(loop);\n  }\n\n  async function predict() {\n    \n    // console.log(state.result1+\"1번\")\n    // console.log(state.result2+\"2번s\")\n    const prediction = await model.predict(webcam.canvas);\n    // console.log(\"핸드폰일 확률\"+prediction[0].probability.toFixed(2))\n    // console.log(\"지갑일 확률\"+prediction[1].probability.toFixed(2))\n    setstate({\n      result1 : prediction[0].probability.toFixed(2),\n      result2 : prediction[1].probability.toFixed(2),\n    })\n    console.log(state.result1+state.result2+\"여기를 보라\")\n    function SetTeachValue(){\n      GetTeachValue(prediction[0].probability.toFixed(2),prediction[1].probability.toFixed(2))\n    }\n    SetTeachValue()\n    if (prediction[0].probability.toFixed(2) >= 0.7) {\n      setOpenVal(true);\n      // labelContainer.childNodes[0].innerHTML = prediction[0].probability.toFixed(2)\n\n      // labelContainer.childNodes[0].innerHTML = '열어줘라!'};\n    } else {\n      setOpenVal(false);\n    }\n    \n  }\n  \n\n  \n\n\n\n  return (\n    <div>\n      <div id=\"webcam-container\"></div>\n      <div id=\"label-container\"><h3>탈모일 확률 : {state.result1} <br></br> 정상일 확률 : {state.result2}</h3></div>\n      <script src=\"https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@1.3.1/dist/tf.min.js\"></script>\n      <script src=\"https://cdn.jsdelivr.net/npm/@teachablemachine/image@0.8/dist/teachablemachine-image.min.js\"></script>\n    </div>\n  )\n}","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\components\\Predict.js",["104"],"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\components\\Table.js",["105"],"import React, { Component } from 'react'\nimport ResultTable from './TableBody'\nimport { get } from 'axios';\nimport '../App.css';\n\nexport default class Table extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            userNum: this.props.userNum,\n            name: this.props.name,\n        }\n    }\n    \n    stateRefresh= () => {           //state 초기화 \n        this.setState(\n          {\n            result:'',\n            completed:0\n            \n          });\n          this.callApi().then(res=> this.setState({result:res})) \n          .catch(err=> console.log(err));\n         \n      }\n\n      componentDidMount() {\n        const login_info={\n            method:\"POST\",\n            body: JSON.stringify(this.state),\n            headers:{\n                \"Content-Type\":\"application/json\"\n            }\n        };\n        fetch(\"/api/login\",login_info).then(res => {\n            return res.json();\n        })\n        this.timer = setInterval(this.progress,20);\n        this.callApi().then(res=> this.setState({result:res})) \n        .catch(err=> console.log(err));    // 가져온 JSON값을 customers에 저장\n      }\n      \n      callApi = async() =>{\n        const response = await fetch('/api/result');  //server.js 에 있는 /api/customers JSON값을 가져온다\n        const body = await response.json();\n        console.log(body)\n        return body;\n        \n      }\n      \n    render() {\n        return (\n            <div>\n             {this.state.userNum} {this.state.name}\n             <br></br>\n             <br></br><br></br><br></br><br></br><br></br><br></br>\n        <tablehead>\n          <tablecell>번호</tablecell>\n          <tablecell>유저넘버</tablecell>\n          <tablecell>깊이</tablecell>\n          <tablecell>길이</tablecell>\n          <tablecell>날짜</tablecell>\n        </tablehead>\n        <tablebody>\n        {this.state.result ? this.state.result.map(result=> {return (<ResultTable key = {result.id} id = {result.id} userNum = {result.userNum} depth={result.depth} distance={result.distance} date={result.date} >  </ResultTable>)\n        }): (<div>zxczx</div>)\n        \n        } </tablebody>\n\n            </div>\n        )\n    }\n}\n","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\components\\TableBody.js",[],"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\components\\Dictaphone.js",["106","107","108"],"import { useTheme } from '@material-ui/core'\r\nimport React, {useEffect,useState} from 'react'\r\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition'\r\n\r\n\r\nconst Dictaphone = ({GetVoiceValue}) => {\r\n  const { transcript, resetTranscript } = useSpeechRecognition()\r\n  const [userNum, setuserNum] = useState(\"1234\")\r\n  useEffect(() => {\r\n    SpeechRecognition.startListening()  \r\n      // setTimeout(() => {\r\n    console.log(\"-------------useEffect------------\")\r\n  console.log(userNum.userNum)\r\n  // handleValueChange()\r\n  // SetVoiceValue()\r\n    // }, 7000)\r\n\r\n     setTimeout(() => {\r\n        // handleValueChange()\r\n        // handleValueChange()\r\n          }, 7000)\r\n  }, [])\r\n\r\n\r\n\r\n \r\n  \r\n\r\n function handleValueChange(e){\r\n   setTimeout(7000)\r\n   SetVoiceValue()\r\n   setuserNum(\r\n    {\r\n      // transcript : e.target.value,\r\n      userNum : transcript,\r\n\r\n    }\r\n    \r\n  )\r\n  console.log(\"-------------handlevalue------------\")\r\n    console.log(userNum.userNum)\r\n  console.log(transcript)\r\n  SetVoiceValue()\r\n\r\n}\r\n\r\nfunction SetVoiceValue(){\r\n  // setTimeout(() => {\r\n  //   setuserNum(\r\n  //     {\r\n  //       // transcript : e.target.value,\r\n  //       userNum : transcript,\r\n  \r\n  //     })  \r\n  //   }, 2000)\r\n  console.log(\"보이스 값 추출\")\r\n  GetVoiceValue(userNum.userNum)\r\n  console.log(\"-------------setvoice------------\")\r\n    console.log(userNum.userNum)  \r\n}\r\n\r\n\r\n\r\n  if (!SpeechRecognition.browserSupportsSpeechRecognition()) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/* <button onClick={SpeechRecognition.startListening}>Start</button>\r\n      <button onClick={SpeechRecognition.stopListening}>Stop</button>\r\n      <button onClick={resetTranscript}>Reset</button> */}\r\n      {/* <input type =\"text\" name={usernum} value={transcript} onChange={handleValueChange.bind(this)}></input> */}\r\n      <input type =\"text\" value={transcript||\"\"} /*onChange={handleValueChange.bind(this)}*/ onChange={handleValueChange} ></input>\r\n      <p>{transcript}</p>\r\n      {/* <p>사{userNum.userNum}이</p> */}\r\n    </div>\r\n  )\r\n}\r\nexport default Dictaphone",{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":5,"column":10,"nodeType":"115","messageId":"116","endLine":5,"endColumn":23},{"ruleId":"113","severity":1,"message":"117","line":5,"column":25,"nodeType":"115","messageId":"116","endLine":5,"endColumn":30},{"ruleId":"113","severity":1,"message":"118","line":5,"column":32,"nodeType":"115","messageId":"116","endLine":5,"endColumn":36},{"ruleId":"113","severity":1,"message":"119","line":7,"column":8,"nodeType":"115","messageId":"116","endLine":7,"endColumn":15},{"ruleId":"113","severity":1,"message":"120","line":84,"column":12,"nodeType":"115","messageId":"116","endLine":84,"endColumn":19},{"ruleId":"113","severity":1,"message":"121","line":4,"column":8,"nodeType":"115","messageId":"116","endLine":4,"endColumn":19},{"ruleId":"122","severity":1,"message":"123","line":32,"column":23,"nodeType":"124","messageId":"125","endLine":32,"endColumn":25},{"ruleId":"113","severity":1,"message":"126","line":40,"column":25,"nodeType":"115","messageId":"116","endLine":40,"endColumn":37},{"ruleId":"113","severity":1,"message":"127","line":1,"column":28,"nodeType":"115","messageId":"116","endLine":1,"endColumn":36},{"ruleId":"113","severity":1,"message":"128","line":3,"column":10,"nodeType":"115","messageId":"116","endLine":3,"endColumn":13},{"ruleId":"129","severity":1,"message":"130","line":15,"column":6,"nodeType":"131","endLine":15,"endColumn":8,"suggestions":"132"},{"ruleId":"109","replacedBy":"133"},{"ruleId":"111","replacedBy":"134"},{"ruleId":"113","severity":1,"message":"135","line":5,"column":8,"nodeType":"115","messageId":"116","endLine":5,"endColumn":18},{"ruleId":"113","severity":1,"message":"120","line":80,"column":12,"nodeType":"115","messageId":"116","endLine":80,"endColumn":19},{"ruleId":"113","severity":1,"message":"121","line":4,"column":8,"nodeType":"115","messageId":"116","endLine":4,"endColumn":19},{"ruleId":"113","severity":1,"message":"136","line":6,"column":10,"nodeType":"115","messageId":"116","endLine":6,"endColumn":14},{"ruleId":"113","severity":1,"message":"137","line":7,"column":8,"nodeType":"115","messageId":"116","endLine":7,"endColumn":25},{"ruleId":"113","severity":1,"message":"138","line":7,"column":29,"nodeType":"115","messageId":"116","endLine":7,"endColumn":49},{"ruleId":"122","severity":1,"message":"123","line":55,"column":23,"nodeType":"124","messageId":"125","endLine":55,"endColumn":25},{"ruleId":"113","severity":1,"message":"139","line":5,"column":10,"nodeType":"115","messageId":"116","endLine":5,"endColumn":17},{"ruleId":"129","severity":1,"message":"130","line":20,"column":6,"nodeType":"131","endLine":20,"endColumn":8,"suggestions":"140"},{"ruleId":"113","severity":1,"message":"127","line":1,"column":28,"nodeType":"115","messageId":"116","endLine":1,"endColumn":36},{"ruleId":"113","severity":1,"message":"128","line":3,"column":10,"nodeType":"115","messageId":"116","endLine":3,"endColumn":13},{"ruleId":"113","severity":1,"message":"141","line":1,"column":10,"nodeType":"115","messageId":"116","endLine":1,"endColumn":18},{"ruleId":"113","severity":1,"message":"142","line":7,"column":23,"nodeType":"115","messageId":"116","endLine":7,"endColumn":38},{"ruleId":"129","severity":1,"message":"143","line":22,"column":6,"nodeType":"131","endLine":22,"endColumn":8,"suggestions":"144"},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Link' is defined but never used.","'Predict' is defined but never used.","'classes' is assigned a value but never used.","'WelcomePage' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'confirm_test' is assigned a value but never used.","'Fragment' is defined but never used.","'get' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'init'. Either include it or remove the dependency array.","ArrayExpression",["147"],["145"],["146"],"'Dictaphone' is defined but never used.","'data' is defined but never used.","'SpeechRecognition' is defined but never used.","'useSpeechRecognition' is defined but never used.","'openVal' is assigned a value but never used.",["148"],"'useTheme' is defined but never used.","'resetTranscript' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userNum.userNum'. Either include it or remove the dependency array.",["149"],"no-global-assign","no-unsafe-negation",{"desc":"150","fix":"151"},{"desc":"150","fix":"152"},{"desc":"153","fix":"154"},"Update the dependencies array to be: [init]",{"range":"155","text":"156"},{"range":"157","text":"156"},"Update the dependencies array to be: [userNum.userNum]",{"range":"158","text":"159"},[389,391],"[init]",[478,480],[702,704],"[userNum.userNum]"]