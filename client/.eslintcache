[{"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\index.js":"1","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\reportWebVitals.js":"2","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\App.js":"3","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\components\\Login.js":"4","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\components\\WelcomePage-motion.jsx":"5","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\components\\Predict.js":"6","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\components\\TableBody.js":"7","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\components\\Dictaphone.js":"8","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\components\\Table1.js":"9","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\components\\Header.js":"10","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\components\\Footer.js":"11","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\components\\Left.js":"12","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\components\\Qrcode.js":"13"},{"size":500,"mtime":1616875556000,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1616875556000,"results":"16","hashOfConfig":"15"},{"size":2222,"mtime":1619831096753,"results":"17","hashOfConfig":"15"},{"size":4355,"mtime":1619832975020,"results":"18","hashOfConfig":"15"},{"size":2572,"mtime":1619510595566,"results":"19","hashOfConfig":"15"},{"size":5343,"mtime":1619500434594,"results":"20","hashOfConfig":"15"},{"size":565,"mtime":1618554834680,"results":"21","hashOfConfig":"15"},{"size":2117,"mtime":1618556116084,"results":"22","hashOfConfig":"15"},{"size":2338,"mtime":1619490985515,"results":"23","hashOfConfig":"15"},{"size":1069,"mtime":1619508599691,"results":"24","hashOfConfig":"15"},{"size":1197,"mtime":1619509497447,"results":"25","hashOfConfig":"15"},{"size":538,"mtime":1618547375825,"results":"26","hashOfConfig":"15"},{"size":828,"mtime":1619832047924,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1bhqh3",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"30"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\index.js",[],["65","66"],"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\reportWebVitals.js",[],"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\App.js",["67","68","69"],"import React,{Component} from 'react';\nimport './App.css';\nimport {withStyles} from '@material-ui/core/styles';\nimport Login from './components/Login';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport { BrowserRouter, Route, Switch, Link  } from 'react-router-dom';\nimport Table1 from './components/Table1';\nimport Predict from './components/Predict';\nimport Qrcode from './components/Qrcode';\n\n\nconst styles = theme => ({\n  root : {\n    width : '100%',\n    marginTop: theme.spacing.unit * 3,\n    overflowX:\"auto\"\n  },\n    table:{\n      minWidth:1080\n    },\n    progress:{\n      margin : theme.spacing.unit*2\n    }\n})\n\n\n\n\n\n\nclass App extends Component{\n\n  constructor(props)     \n  {\n    super(props);\n    this.state={\n      customers:'',\n      completed:0\n    }\n  }\n\n  stateRefresh= () => {           //state 초기화 \n    this.setState(\n      {\n        customers:'',\n        completed:0\n      });\n      this.callApi().then(res=> this.setState({customers:res})) \n      .catch(err=> console.log(err+\"에러\"));\n\n  }\n\n\n  \n  componentDidMount() {\n    this.timer = setInterval(this.progress,20);\n    this.callApi().then(res=> this.setState({customers:res})) \n    .catch(err=> console.log(err));    // 가져온 JSON값을 customers에 저장\n  }\n  \n  callApi = async() =>{\n    const response = await fetch('/api/predict');  //server.js 에 있는 /api/customers JSON값을 가져온다\n    const body = await response.json();\n    return body;\n  }\n\n  // callApi1 = async() =>{\n  //   const response = await fetch('/api/result');  //server.js 에 있는 /api/customers JSON값을 가져온다\n  //   const body = await response.json();\n  //   return body;\n  // }\n\n\n \n\n  progress = () => {\n    const {completed} =this.state;\n    this.setState({ completed: completed>=100? 0 : completed+1});\n  }\n\n  \n  render()\n  \n  {\n    const {classes} =this.props;\n    return(\n      <>\n     <div>\n     </div>\n      {/* <Login></Login> */}\n     \n      <BrowserRouter>\n    <Switch>\n    <Route exact path=\"/\" component={Login}/>\n     <Route path=\"/predict\" component={Predict}/>\n     <Route path=\"/qrcode\" component={Qrcode}/>\n    </Switch>\n  </BrowserRouter>\n  <div>\n     </div>\n      </>\n    );\n  }\n}\n\n\nexport default withStyles(styles)(App);\n","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\components\\Login.js",["70","71"],"import React, { Component } from 'react'\nimport Predict from './Predict';\nimport '../App.css';\nimport WelcomePage from './WelcomePage-motion.jsx';\nimport Dictaphone from './Dictaphone';\nimport Header from './Header';\nimport Footer from './Footer';\nimport QrReader from 'react-qr-scanner'\n\n\nexport default class Login extends Component {\n    constructor(props) {   // 초기 설정\n        super(props);\n        this.state = {\n            userNum: \"\",\n            name: \"\",\n            isLogin: false,\n            delay: 100,\n            result: 'No result',\n        }\n        this.GetVoiceValue = this.GetVoiceValue.bind(this);\n        this.handleScan = this.handleScan.bind(this)\n    }\n\n    componentDidMount() {\n\n    }\n\n    handleScan(data) {\n        this.setState({\n            result: 4566,\n        })\n    }\n    handleError(err) {\n        console.error(err)\n    }\n\n\n\n\n    GetVoiceValue(data1) {\n        console.log(\"가져온 값\" + data1);\n        this.setState(\n            {\n                userNum: data1,\n            });\n    }\n\n    handleLogin = e => {\n        e.preventDefault() //페이징 이동 없게\n        console.log(\"버튼이 누렸어요\")\n        const login_info = {\n            method: \"POST\",\n            body: JSON.stringify(this.state),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        };\n        fetch(\"/api/login\", login_info).then(res => {\n            return res.json();\n        })\n            .then(json => {\n                console.log(json[0])\n                console.log(\"checkpoint1\")\n                if (json[0] != undefined) {\n                    window.localStorage.setItem(\"userInfo\", JSON.stringify(json))\n                    this.setState(\n                        {\n                            userNum: json[0].usernum,\n                            name: json[0].name,\n                            isLogin: true\n                        });\n                    console.log(this.state.isLogin)\n\n\n                }\n                else {\n                    alert(\"아이디 혹은 비밀번호를 확인하세요\");\n                }\n\n            });\n    }\n\n\n\n\n    handleuserNum = e => {\n        this.setState(\n            {\n                userNum: e.target.value\n\n            })\n    }\n\n \n\n    render() {\n        const previewStyle = {\n            height: 240,\n            width: 320,\n          }\n      \n        return (\n            <>\n                <Header />\n                {/* <Left></Left> */}\n                {/* HEADER */}\n                <div className=\"Content\">\n                    <div className=\"LoginPage\">\n                        {\n                            this.state.isLogin === false ? (\n                                <div className=\"Login-form\">\n                                    <form className=\"LoginForm\" onSubmit={this.handleLogin}>\n                                        <div id=\"title\">Namigation</div>\n                                        <br></br>\n                                        <QrReader\n                                         delay={this.state.delay}\n                                        style={previewStyle}\n                                        onError={this.handleError}\n                                        onScan={this.handleScan}\n                                        />\n                                        <h6>(QR 코드를 보여주세요)</h6>\n                                        <p>{this.state.result}</p>\n                                        <div><input id=\"LoginInput\" type=\"text\" value={this.state.result} onChange={this.handleuserNum.bind(this)} placeholder=\"제공받은 유저키를 입력해주세요\"></input><button class=\"btn btn-primary\" id=\"btnLogin\" type=\"submit\">로그인</button></div>\n                                        {/* <button class=\"btn btn-primary\" id=\"btnLogin2\" onClick={this.haha()}>누르기</button> */}\n                                    </form>\n                                </div>) : (<div><Predict name={this.state.name} userNum={this.state.userNum} isLogin={this.state.isLogin}></Predict></div>)\n                        }\n                        <Dictaphone GetVoiceValue={this.GetVoiceValue} />\n                    </div>\n                    <Footer />\n                    {/* Footer */}\n                </div>\n            </>\n        )\n    }\n}\n","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\components\\WelcomePage-motion.jsx",["72","73","74"],"import React, { useState, useEffect } from 'react'\nimport * as tmImage from '@teachablemachine/image'\n\nexport default function WelcomePage({GetTeachValue}) {\n  const [openVal, setOpenVal] = useState(false);\n  const [state, setstate] = useState({\n    result1 : \"High\",\n    result2 : \"Middle\",\n    result3 : \"Low\",\n    result4 : \"Good\",\n    iswebcam : false,\n  })\n\n  // const URL = \"https://teachablemachine.withgoogle.com/models/pg97lEWuB/\"  //원래\n  const URL = \"https://teachablemachine.withgoogle.com/models/durPR47Po/\" //4개 분류\n\n  \n  let model;\n  let webcam;\n  let labelContainer;\n  let maxPredictions;\n\n  useEffect(() => {\n    init()\n    \n  }, [])\n\n  async function init() {\n    const modelURL = URL + \"model.json\";\n    const metadataURL = URL + \"metadata.json\";\n    \n\n    model = await tmImage.load(modelURL, metadataURL);\n    maxPredictions = model.getTotalClasses();\n\n    const flip = true; \n    webcam = new tmImage.Webcam(800, 800, flip); \n    await webcam.setup();\n    await webcam.play();\n    window.requestAnimationFrame(loop);\n    webcam.canvas.id=\"WebCam\"\n    document.getElementById(\"webcam-container\").appendChild(webcam.canvas);\n    labelContainer = document.getElementById(\"label-container\");\n    for (let i = 0; i < maxPredictions; i++) { \n      labelContainer.appendChild(document.createElement(\"div\"));\n    }\n  }\n\n  async function loop() {\n    webcam.update();\n    await predict();\n    window.requestAnimationFrame(loop);\n  }\n\n  async function predict() {\n    \n    const prediction = await model.predict(webcam.canvas);\n    setstate({\n      high : prediction[0].probability.toFixed(2),\n      middle : prediction[1].probability.toFixed(2),\n      low : prediction[2].probability.toFixed(2),\n      good : prediction[3].probability.toFixed(2),\n    })\n    function SetTeachValue(){\n      GetTeachValue(prediction[0].probability.toFixed(2),prediction[1].probability.toFixed(2),prediction[2].probability.toFixed(2),prediction[3].probability.toFixed(2))\n    }\n    SetTeachValue()\n    if (prediction[0].probability.toFixed(2) >= 0.7) {\n      setOpenVal(true);\n    } else {\n      setOpenVal(false);\n    }\n    \n  }\n\n\n  return (\n    <div>\n      \n      <div id=\"webcam-container\"></div>\n      <div id=\"label-container\">{/* <h3>탈모일 확률 : {state.result1} <br></br> 정상일 확률 : {state.result2}</h3> */}</div>\n      <script src=\"https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@1.3.1/dist/tf.min.js\"></script>\n      <script src=\"https://cdn.jsdelivr.net/npm/@teachablemachine/image@0.8/dist/teachablemachine-image.min.js\"></script>\n    </div>\n  )\n}","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\components\\Predict.js",["75","76"],"import React, { Component, Fragment } from 'react'\r\nimport { post } from 'axios';\r\nimport Table from './Table1'\r\nimport '../App.css';\r\nimport WelcomePage from './WelcomePage-motion';\r\nimport html2canvas from 'html2canvas';\r\nimport $ from 'jquery';\r\n\r\nexport default class Predict extends Component {\r\n    static defaultProps = {\r\n        isLogin:\"\",\r\n        name:\"\",\r\n      }\r\n    constructor(props){\r\n    super(props);\r\n    this.state={\r\n        userNum: this.props.userNum,\r\n        high : \"\",\r\n        middle : \"\",\r\n        low : \"\",\r\n        good : \"\",\r\n        isLogin: null\r\n    }\r\n    this.handleValueChange = this.handleValueChange.bind(this)   \r\n    this.addpredict = this.addpredict.bind(this) \r\n}\r\n\r\n\r\nstateRefresh=() => {\r\n    console.log(\"checkpoin4\")\r\n    this.setState(\r\n        {\r\n            predict:\"\",\r\n            completed:0\r\n        }\r\n    );\r\n  \r\n    this.callApi().then(res=> this.setState({predict:res})).catch(err=> console.log(err))\r\n}\r\n\r\nhandleFormPredict=(e) =>{\r\n    this.downImg()\r\n    e.preventDefault()\r\n    console.log(\"checkpoint2\")\r\n    // this.addresult()\r\n    // .then((response)=> {\r\n    //     console.log(\"!!!!!!!\"+response.data);\r\n    // })\r\n    this.addpredict()\r\n    .then((response)=> {\r\n        console.log(\"!!!!!!!\"+response.data);\r\n    })\r\n    // this.setState(\r\n    //     {\r\n    //     depth : \"\",\r\n    //     distance : \"\",\r\n    //     userNum:\"\",\r\n    //     }\r\n    // )\r\n    alert(\"전송완료!\")\r\n}\r\n\r\n\r\n\r\ndownImg(){\r\n    console.log(\"이거 했다.\")\r\n    html2canvas($(\"#WebCam\")[0]).then(function(canvas){\r\n        var myImage = canvas.toDataURL();\r\n        var link = document.createElement(\"a\")\r\n        link.download = \"촬영한 사진.png\";\r\n        link.href = myImage;\r\n        document.body.appendChild(link);\r\n        link.click();\r\n    });\r\n    \r\n}\r\n\r\n\r\n// downloadURI= (uri, name1)=> {\r\n//     var link = document.createElement(\"a\")\r\n//     link.download = name1;\r\n//     link.href = uri;\r\n//     document.body.appendChild(link);\r\n//     link.click();\r\n//   }\r\n\r\n\r\n\r\nhandleValueChange=(e) => {\r\n    console.log(\"checkpoint1\")\r\n   let nextState={};\r\n   nextState[e.target.name] = e.target.value;\r\n   this.setState(nextState)  \r\n}\r\n\r\n    addpredict= () => {\r\n        const url ='/api/predict';\r\n        const formData = new FormData();\r\n        formData.append('userNum',this.props.userNum);\r\n        formData.append('high',this.state.high*100);\r\n        formData.append('middle',this.state.middle*100);\r\n        formData.append('low',this.state.low*100);\r\n        formData.append('good',this.state.good*100);\r\n        const config = {\r\n            headers:{\r\n                'content-type' : 'multipart/form-data'\r\n            }\r\n        }\r\n        return post(url,formData,config);\r\n        }\r\n\r\n\r\n        //////시작 ////////\r\n        addresult= () => {\r\n            const url ='/api/result/:userNum';\r\n            const formData = new FormData();\r\n            formData.append('userNum',this.props.userNum);\r\n            const config = {\r\n                headers:{\r\n                    'content-type' : 'multipart/form-data'\r\n                }\r\n            }\r\n            return post(url,formData,config);\r\n            }\r\n\r\n        //////삭제///////\r\n\r\n\r\n\r\n       \r\n\r\n    GetTeachValue = (data1,data2,data3,data4) => {\r\n        this.setState({\r\n            high : data1,\r\n            middle : data2,\r\n            low : data3,\r\n            good : data4,\r\n        })}\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"PredictPage\">\r\n                {\r\n                    this.props.isLogin===true ? (              \r\n                    <div className=\"Predict-form\">\r\n                        <h1>{this.props.isLogin}</h1>\r\n                        {/* <h6>{this.props.name}님이 로그인 하셨습니다~</h6> */}\r\n                        {/* <br></br> */}\r\n\r\n                            \r\n                        <WelcomePage GetTeachValue= {this.GetTeachValue}/>\r\n                        <form onSubmit={this.handleFormPredict}>\r\n                       <input id=\"HighClass\" type=\"text\" name =\"high\"value={\"고위험 : \"+this.state.high*100} onChange={this.handleValueChange} placeholder=\"High\"></input>\r\n                        <input type=\"text\" id=\"MiddleClass\" name =\"middle\" value={\"위험 : \"+this.state.middle*100} onChange={this.handleValueChange} placeholder=\"Middle\"></input>\r\n                        <input type=\"text\" id=\"LowClass\" name =\"low\" value={\"경고 : \"+this.state.low*100} onChange={this.handleValueChange} placeholder=\"Low\"></input>\r\n                        <input type=\"text\" id=\"GoodClass\" name =\"good\" value={\"좋음 : \"+this.state.good*100} onChange={this.handleValueChange} placeholder=\"Good\"></input>\r\n                        <input type=\"hidden\" value={this.props.name} ></input>\r\n                        <button type=\"submit\">제출</button>\r\n                        </form>\r\n                        {/* <button type=\"text\" onClick={function(){\r\n                            this.props.isLogin = false\r\n                        }}>이전으로</button>  이거 해결하기*/} \r\n        </div>) : \r\n        (<div>로그인 해주세요~</div>)\r\n                }\r\n                {/* <Table name={this.props.name} userNum ={this.state.userNum}> name={this.props.name}</Table> */}\r\n            </div>\r\n        ) \r\n    }\r\n}\r\n","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\components\\TableBody.js",["77"],"import React, { Component } from 'react'\n\nexport default class TableBody extends Component {\n    render() {\n        return (\n            <div>\n            <table class=\"table\">\n            <th scope=\"row\">{this.props.id}</th>\n            <td>{this.props.userNum}</td>\n            <td>{this.props.depth}</td>\n            <td>{this.props.distance}</td>\n            <td>{this.props.date}</td>\n            <td><img src=\"https://placeimg.com/64/64/summer\" /></td>\n            {/* <td><img src=\"\"></img></td> */}\n            </table>\n            </div>\n        )\n    }\n}\n","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\components\\Dictaphone.js",["78","79","80","81"],"import { useTheme } from '@material-ui/core'\r\nimport React, {useEffect,useState} from 'react'\r\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition'\r\n\r\n\r\nconst Dictaphone = ({GetVoiceValue}) => {\r\n  const { transcript, resetTranscript } = useSpeechRecognition()\r\n  const [userNum, setuserNum] = useState(\"1234\")\r\n  useEffect(() => {\r\n    SpeechRecognition.startListening()  \r\n      // setTimeout(() => {\r\n    console.log(\"-------------useEffect------------\")\r\n  console.log(userNum.userNum)\r\n  // handleValueChange()\r\n  // SetVoiceValue()\r\n    // }, 7000)\r\n\r\n     setTimeout(() => {\r\n        // handleValueChange()\r\n        // handleValueChange()\r\n          }, 7000)\r\n  }, [])\r\n\r\n\r\n\r\n \r\n  \r\n\r\n function handleValueChange(e){\r\n   setTimeout(7000)\r\n   SetVoiceValue()\r\n   setuserNum(\r\n    {\r\n      // transcript : e.target.value,\r\n      userNum : transcript,\r\n\r\n    }\r\n    \r\n  )\r\n  console.log(\"-------------handlevalue------------\")\r\n    console.log(userNum.userNum)\r\n  console.log(transcript)\r\n  SetVoiceValue()\r\n\r\n}\r\n\r\nfunction SetVoiceValue(){\r\n  // setTimeout(() => {\r\n  //   setuserNum(\r\n  //     {\r\n  //       // transcript : e.target.value,\r\n  //       userNum : transcript,\r\n  \r\n  //     })  \r\n  //   }, 2000)\r\n  console.log(\"보이스 값 추출\")\r\n  GetVoiceValue(userNum.userNum)\r\n  console.log(\"-------------setvoice------------\")\r\n    console.log(userNum.userNum)  \r\n}\r\n\r\n\r\n\r\n  if (!SpeechRecognition.browserSupportsSpeechRecognition()) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/* <button onClick={SpeechRecognition.startListening}>Start</button>\r\n      <button onClick={SpeechRecognition.stopListening}>Stop</button>\r\n      <button onClick={resetTranscript}>Reset</button> */}\r\n      {/* <input type =\"text\" name={usernum} value={transcript} onChange={handleValueChange.bind(this)}></input> */}\r\n      <input id=\"VoiceInput\" type =\"text\" value={transcript||\"\"} onChange={handleValueChange.bind(this)} onChange={handleValueChange} ></input>\r\n      <p>{transcript}</p>\r\n      {/* <p>사{userNum.userNum}이</p> */}\r\n    </div>\r\n  )\r\n}\r\nexport default Dictaphone","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\components\\Table1.js",["82","83"],"import React, { Component } from 'react'\nimport ResultTable from './TableBody'\nimport { get } from 'axios';\nimport '../App.css';\nimport Header from './Header';\nimport Left from './Left';\nimport Footer from './Footer';\n\nexport default class Table1 extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            userNum: this.props.userNum,\n            name: this.props.name,\n        }\n    }\n    \n    stateRefresh= () => {           //state 초기화 \n        this.setState(\n          {\n            result:'',\n            completed:0\n            \n          });\n          this.callApi().then(res=> this.setState({result:res})) \n          .catch(err=> console.log(err));\n         \n      }\n\n      componentDidMount() {\n        const login_info={\n            method:\"POST\",\n            body: JSON.stringify(this.state),\n            headers:{\n                \"Content-Type\":\"application/json\"\n            }\n        };\n        fetch(\"/api/login\",login_info).then(res => {\n            return res.json();\n        })\n        this.timer = setInterval(this.progress,20);\n        this.callApi().then(res=> this.setState({result:res})) \n        .catch(err=> console.log(err));    // 가져온 JSON값을 customers에 저장\n      }\n      \n      callApi = async() =>{\n        const response = await fetch('/api/result');  //server.js 에 있는 /api/customers JSON값을 가져온다\n        const body = await response.json();\n        console.log(body)\n        return body;\n        \n      }\n      \n    render() {\n        return (\n          <>\n          <Header></Header>\n          {/* <Left></Left> */}\n            <div className=\"Content\">\n            <table class=\"table\">\n  <thead>\n    <tr>\n      <th scope=\"col\">#</th>\n      <th scope=\"col\">First</th>\n      <th scope=\"col\">Last</th>\n      <th scope=\"col\">Handle</th>\n    </tr>\n  </thead>\n  \n</table>\n             \n           \n{this.state.userNum} {this.state.name}\n        <tablebody>\n        {this.state.result ? this.state.result.map(result=> {return (<ResultTable key = {result.id} id = {result.id} userNum = {result.userNum} depth={result.depth} distance={result.distance} date={result.date} >  </ResultTable>)\n        }): (<div>zxczx</div>)\n        \n        } </tablebody>\n\n            </div>\n            <Footer></Footer>\n            </>\n        )\n    }\n}\n","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\components\\Header.js",["84","85","86","87"],"import React from 'react'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"Header\">\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n  <a className=\"navbar-brand\" href=\"#\"><img src=\"https://namigation.s3.ap-northeast-2.amazonaws.com/web/mark.jpg\" width=\"35px\"></img></a>\r\n  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span className=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n  <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n    <div className=\"navbar-nav\">\r\n      <a className=\"nav-item nav-link active\" href=\"/\">Home <span className=\"sr-only\">(current)</span></a>\r\n      <a className=\"nav-item nav-link\" href=\"/table\">Table</a>\r\n      <a className=\"nav-item nav-link\" href=\"#\">Pricing</a>\r\n      <a className=\"nav-item nav-link disabled\" href=\"#\">Disabled</a>\r\n    </div>\r\n  </div>\r\n</nav>\r\n </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Header\r\n","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\components\\Footer.js",["88","89","90","91","92","93","94"],"import React from 'react'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"Footer\">\r\n        <div className=\"pt-4 my-md-5 pt-md-5 border-top\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-md\">\r\n            <img className=\"mb-2\" src=\"https://namigation.s3.ap-northeast-2.amazonaws.com/web/mark.jpg\" width=\"20px\" alt=\"\" width=\"24\" height=\"24\"/>\r\n            <small className=\"d-block mb-3 text-muted\">&copy; 2020-2021</small>\r\n          <div className=\"col-6 col-md\">\r\n            <h5>Features</h5>\r\n            <ul className=\"list-unstyled text-small\">\r\n              <li><a className=\"text-muted\" href=\"#\">Cool stuff</a></li>\r\n              <li><a className=\"text-muted\" href=\"#\">Random feature</a></li>\r\n              <li><a className=\"text-muted\" href=\"#\">Team feature</a></li>\r\n              <li><a className=\"text-muted\" href=\"#\">Stuff for developers</a></li>\r\n              <li><a className=\"text-muted\" href=\"#\">Another one</a></li>\r\n              <li><a className=\"text-muted\" href=\"#\">Last time</a></li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n        </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Footer\r\n","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\components\\Left.js",[],["95","96"],"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\네미게이션\\Namigation-WEB\\client\\src\\components\\Qrcode.js",[],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":6,"column":40,"nodeType":"103","messageId":"104","endLine":6,"endColumn":44},{"ruleId":"101","severity":1,"message":"105","line":7,"column":8,"nodeType":"103","messageId":"104","endLine":7,"endColumn":14},{"ruleId":"101","severity":1,"message":"106","line":85,"column":12,"nodeType":"103","messageId":"104","endLine":85,"endColumn":19},{"ruleId":"101","severity":1,"message":"107","line":4,"column":8,"nodeType":"103","messageId":"104","endLine":4,"endColumn":19},{"ruleId":"108","severity":1,"message":"109","line":65,"column":29,"nodeType":"110","messageId":"111","endLine":65,"endColumn":31},{"ruleId":"101","severity":1,"message":"112","line":5,"column":10,"nodeType":"103","messageId":"104","endLine":5,"endColumn":17},{"ruleId":"101","severity":1,"message":"113","line":6,"column":10,"nodeType":"103","messageId":"104","endLine":6,"endColumn":15},{"ruleId":"114","severity":1,"message":"115","line":26,"column":6,"nodeType":"116","endLine":26,"endColumn":8,"suggestions":"117"},{"ruleId":"101","severity":1,"message":"118","line":1,"column":28,"nodeType":"103","messageId":"104","endLine":1,"endColumn":36},{"ruleId":"101","severity":1,"message":"119","line":3,"column":8,"nodeType":"103","messageId":"104","endLine":3,"endColumn":13},{"ruleId":"120","severity":1,"message":"121","line":13,"column":17,"nodeType":"122","endLine":13,"endColumn":64},{"ruleId":"101","severity":1,"message":"123","line":1,"column":10,"nodeType":"103","messageId":"104","endLine":1,"endColumn":18},{"ruleId":"101","severity":1,"message":"124","line":7,"column":23,"nodeType":"103","messageId":"104","endLine":7,"endColumn":38},{"ruleId":"114","severity":1,"message":"125","line":22,"column":6,"nodeType":"116","endLine":22,"endColumn":8,"suggestions":"126"},{"ruleId":"127","severity":1,"message":"128","line":74,"column":106,"nodeType":"129","endLine":74,"endColumn":134},{"ruleId":"101","severity":1,"message":"130","line":3,"column":10,"nodeType":"103","messageId":"104","endLine":3,"endColumn":13},{"ruleId":"101","severity":1,"message":"131","line":6,"column":8,"nodeType":"103","messageId":"104","endLine":6,"endColumn":12},{"ruleId":"132","severity":1,"message":"133","line":7,"column":3,"nodeType":"122","endLine":7,"endColumn":40},{"ruleId":"120","severity":1,"message":"121","line":7,"column":40,"nodeType":"122","endLine":7,"endColumn":128},{"ruleId":"132","severity":1,"message":"133","line":15,"column":7,"nodeType":"122","endLine":15,"endColumn":49},{"ruleId":"132","severity":1,"message":"133","line":16,"column":7,"nodeType":"122","endLine":16,"endColumn":58},{"ruleId":"127","severity":1,"message":"128","line":9,"column":125,"nodeType":"129","endLine":9,"endColumn":135},{"ruleId":"132","severity":1,"message":"133","line":14,"column":19,"nodeType":"122","endLine":14,"endColumn":54},{"ruleId":"132","severity":1,"message":"133","line":15,"column":19,"nodeType":"122","endLine":15,"endColumn":54},{"ruleId":"132","severity":1,"message":"133","line":16,"column":19,"nodeType":"122","endLine":16,"endColumn":54},{"ruleId":"132","severity":1,"message":"133","line":17,"column":19,"nodeType":"122","endLine":17,"endColumn":54},{"ruleId":"132","severity":1,"message":"133","line":18,"column":19,"nodeType":"122","endLine":18,"endColumn":54},{"ruleId":"132","severity":1,"message":"133","line":19,"column":19,"nodeType":"122","endLine":19,"endColumn":54},{"ruleId":"97","replacedBy":"134"},{"ruleId":"99","replacedBy":"135"},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Table1' is defined but never used.","'classes' is assigned a value but never used.","'WelcomePage' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'openVal' is assigned a value but never used.","'state' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'init'. Either include it or remove the dependency array.","ArrayExpression",["138"],"'Fragment' is defined but never used.","'Table' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useTheme' is defined but never used.","'resetTranscript' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userNum.userNum'. Either include it or remove the dependency array.",["139"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'get' is defined but never used.","'Left' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["136"],["137"],"no-global-assign","no-unsafe-negation",{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},"Update the dependencies array to be: [init]",{"range":"144","text":"145"},"Update the dependencies array to be: [userNum.userNum]",{"range":"146","text":"147"},[645,647],"[init]",[702,704],"[userNum.userNum]"]